IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function], error: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket: 
   Socket {
     _connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [ [Function: socketOnError] ],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 4836,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: [],
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            CorkedRequest {
              next: CorkedRequest { next: null, entry: null, finish: [Function] },
              entry: null,
              finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 768,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
           _idlePrev: [Circular],
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } },
        _idlePrev: [Circular],
        _idleStart: 64493,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: true,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: false,
              domain: null,
              _events: { end: [Function], error: [Function] },
              _eventsCount: 2,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { accept: 'application/javascript, */*;q=0.8',
                 referer: 'http://localhost:8001/static/viewAPIs.html',
                 'accept-language': 'zh-CN',
                 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'accept-encoding': 'gzip, deflate',
                 host: 'localhost:8001',
                 'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'if-none-match': 'W/"155c77-15fd4322140"',
                 connection: 'Keep-Alive' },
              rawHeaders: 
               [ 'Accept',
                 'application/javascript, */*;q=0.8',
                 'Referer',
                 'http://localhost:8001/static/viewAPIs.html',
                 'Accept-Language',
                 'zh-CN',
                 'User-Agent',
                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'Accept-Encoding',
                 'gzip, deflate',
                 'Host',
                 'localhost:8001',
                 'If-Modified-Since',
                 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'If-None-Match',
                 'W/"155c77-15fd4322140"',
                 'Connection',
                 'Keep-Alive' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/swagger-ui-bundle.js',
              method: 'GET',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: true,
              next: [Function: next],
              baseUrl: '/static',
              originalUrl: '/static/swagger-ui-bundle.js',
              _parsedUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/swagger-ui-bundle.js',
                 path: '/swagger-ui-bundle.js',
                 href: '/swagger-ui-bundle.js',
                 _raw: '/swagger-ui-bundle.js' },
              params: {},
              query: {},
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: 0,
                 _hasBody: false,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: 
                  { 'x-powered-by': 'Express',
                    'access-control-allow-origin': '*',
                    'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                    'access-control-allow-headers': 'Content-Type',
                    'accept-ranges': 'bytes',
                    'cache-control': 'public, max-age=0',
                    'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    etag: 'W/"155c77-15fd4322140"' },
                 _headerNames: 
                  { 'x-powered-by': 'X-Powered-By',
                    'access-control-allow-origin': 'Access-Control-Allow-Origin',
                    'access-control-allow-methods': 'Access-Control-Allow-Methods',
                    'access-control-allow-headers': 'Access-Control-Allow-Headers',
                    'accept-ranges': 'Accept-Ranges',
                    'cache-control': 'Cache-Control',
                    'last-modified': 'Last-Modified',
                    etag: 'ETag' },
                 _onPendingData: [Function: updateOutgoingData],
                 req: [Circular],
                 locals: {},
                 statusCode: 304,
                 statusMessage: 'Not Modified' },
              route: 
               Route {
                 path: '*',
                 stack: 
                  [ Layer {
                      handle: [Function],
                      name: '<anonymous>',
                      params: undefined,
                      path: undefined,
                      keys: [],
                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                      method: undefined } ],
                 methods: { _all: true } },
              _parsedOriginalUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/static/swagger-ui-bundle.js',
                 path: '/static/swagger-ui-bundle.js',
                 href: '/static/swagger-ui-bundle.js',
                 _raw: '/static/swagger-ui-bundle.js' },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 57906 } },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 768,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 64493,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'application/javascript, */*;q=0.8',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"155c77-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'application/javascript, */*;q=0.8',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"155c77-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui-bundle.js',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui-bundle.js',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui-bundle.js',
                       path: '/swagger-ui-bundle.js',
                       href: '/swagger-ui-bundle.js',
                       _raw: '/swagger-ui-bundle.js' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"155c77-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui-bundle.js',
                       path: '/static/swagger-ui-bundle.js',
                       href: '/static/swagger-ui-bundle.js',
                       _raw: '/static/swagger-ui-bundle.js' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57906 } },
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } } },
     _idleStart: 64494,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: 
         { 'x-powered-by': 'Express',
           'access-control-allow-origin': '*',
           'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
           'access-control-allow-headers': 'Content-Type' },
        _headerNames: 
         { 'x-powered-by': 'X-Powered-By',
           'access-control-allow-origin': 'Access-Control-Allow-Origin',
           'access-control-allow-methods': 'Access-Control-Allow-Methods',
           'access-control-allow-headers': 'Access-Control-Allow-Headers' },
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {} },
     _peername: { address: '::1', family: 'IPv6', port: 57904 } },
  connection: 
   Socket {
     _connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [ [Function: socketOnError] ],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 4836,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: [],
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            CorkedRequest {
              next: CorkedRequest { next: null, entry: null, finish: [Function] },
              entry: null,
              finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 768,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
           _idlePrev: [Circular],
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } },
        _idlePrev: [Circular],
        _idleStart: 64493,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: true,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: false,
              domain: null,
              _events: { end: [Function], error: [Function] },
              _eventsCount: 2,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { accept: 'application/javascript, */*;q=0.8',
                 referer: 'http://localhost:8001/static/viewAPIs.html',
                 'accept-language': 'zh-CN',
                 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'accept-encoding': 'gzip, deflate',
                 host: 'localhost:8001',
                 'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'if-none-match': 'W/"155c77-15fd4322140"',
                 connection: 'Keep-Alive' },
              rawHeaders: 
               [ 'Accept',
                 'application/javascript, */*;q=0.8',
                 'Referer',
                 'http://localhost:8001/static/viewAPIs.html',
                 'Accept-Language',
                 'zh-CN',
                 'User-Agent',
                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'Accept-Encoding',
                 'gzip, deflate',
                 'Host',
                 'localhost:8001',
                 'If-Modified-Since',
                 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'If-None-Match',
                 'W/"155c77-15fd4322140"',
                 'Connection',
                 'Keep-Alive' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/swagger-ui-bundle.js',
              method: 'GET',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: true,
              next: [Function: next],
              baseUrl: '/static',
              originalUrl: '/static/swagger-ui-bundle.js',
              _parsedUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/swagger-ui-bundle.js',
                 path: '/swagger-ui-bundle.js',
                 href: '/swagger-ui-bundle.js',
                 _raw: '/swagger-ui-bundle.js' },
              params: {},
              query: {},
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: 0,
                 _hasBody: false,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: 
                  { 'x-powered-by': 'Express',
                    'access-control-allow-origin': '*',
                    'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                    'access-control-allow-headers': 'Content-Type',
                    'accept-ranges': 'bytes',
                    'cache-control': 'public, max-age=0',
                    'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    etag: 'W/"155c77-15fd4322140"' },
                 _headerNames: 
                  { 'x-powered-by': 'X-Powered-By',
                    'access-control-allow-origin': 'Access-Control-Allow-Origin',
                    'access-control-allow-methods': 'Access-Control-Allow-Methods',
                    'access-control-allow-headers': 'Access-Control-Allow-Headers',
                    'accept-ranges': 'Accept-Ranges',
                    'cache-control': 'Cache-Control',
                    'last-modified': 'Last-Modified',
                    etag: 'ETag' },
                 _onPendingData: [Function: updateOutgoingData],
                 req: [Circular],
                 locals: {},
                 statusCode: 304,
                 statusMessage: 'Not Modified' },
              route: 
               Route {
                 path: '*',
                 stack: 
                  [ Layer {
                      handle: [Function],
                      name: '<anonymous>',
                      params: undefined,
                      path: undefined,
                      keys: [],
                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                      method: undefined } ],
                 methods: { _all: true } },
              _parsedOriginalUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/static/swagger-ui-bundle.js',
                 path: '/static/swagger-ui-bundle.js',
                 href: '/static/swagger-ui-bundle.js',
                 _raw: '/static/swagger-ui-bundle.js' },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 57906 } },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 768,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 64493,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'application/javascript, */*;q=0.8',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"155c77-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'application/javascript, */*;q=0.8',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"155c77-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui-bundle.js',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui-bundle.js',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui-bundle.js',
                       path: '/swagger-ui-bundle.js',
                       href: '/swagger-ui-bundle.js',
                       _raw: '/swagger-ui-bundle.js' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"155c77-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui-bundle.js',
                       path: '/static/swagger-ui-bundle.js',
                       href: '/static/swagger-ui-bundle.js',
                       _raw: '/static/swagger-ui-bundle.js' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57906 } },
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } } },
     _idleStart: 64494,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: 
         { 'x-powered-by': 'Express',
           'access-control-allow-origin': '*',
           'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
           'access-control-allow-headers': 'Content-Type' },
        _headerNames: 
         { 'x-powered-by': 'X-Powered-By',
           'access-control-allow-origin': 'Access-Control-Allow-Origin',
           'access-control-allow-methods': 'Access-Control-Allow-Methods',
           'access-control-allow-headers': 'Access-Control-Allow-Headers' },
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {} },
     _peername: { address: '::1', family: 'IPv6', port: 57904 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { referer: 'http://localhost:8001/static/viewAPIs.html',
     'accept-language': 'zh-CN',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
     accept: 'application/json,*/*',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8001',
     'if-modified-since': 'Mon, 20 Nov 2017 07:42:50 GMT',
     'if-none-match': 'W/"59c-15fd8613621"',
     connection: 'Keep-Alive' },
  rawHeaders: 
   [ 'Referer',
     'http://localhost:8001/static/viewAPIs.html',
     'Accept-Language',
     'zh-CN',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
     'Accept',
     'application/json,*/*',
     'Accept-Encoding',
     'gzip, deflate',
     'Host',
     'localhost:8001',
     'If-Modified-Since',
     'Mon, 20 Nov 2017 07:42:50 GMT',
     'If-None-Match',
     'W/"59c-15fd8613621"',
     'Connection',
     'Keep-Alive' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/static/uploads/json/file.json',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     _connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [ [Function: socketOnError] ],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 4836,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [Function]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              once: [Function: once],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'D:\\API-Gateway-v3-master\\src\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/static/uploads/json/file.json' },
                              path: '/static/uploads/json/file.json',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [ { name: 0, optional: false, offset: 9 } ],
                              regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: {},
                              path: '/static',
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function],
                                      name: '<anonymous>',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener],
           clientError: [Function] },
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::8001' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: [],
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            CorkedRequest {
              next: CorkedRequest { next: null, entry: null, finish: [Function] },
              entry: null,
              finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 768,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
           _idlePrev: [Circular],
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } },
        _idlePrev: [Circular],
        _idleStart: 64493,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: true,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: false,
              domain: null,
              _events: { end: [Function], error: [Function] },
              _eventsCount: 2,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { accept: 'application/javascript, */*;q=0.8',
                 referer: 'http://localhost:8001/static/viewAPIs.html',
                 'accept-language': 'zh-CN',
                 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'accept-encoding': 'gzip, deflate',
                 host: 'localhost:8001',
                 'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'if-none-match': 'W/"155c77-15fd4322140"',
                 connection: 'Keep-Alive' },
              rawHeaders: 
               [ 'Accept',
                 'application/javascript, */*;q=0.8',
                 'Referer',
                 'http://localhost:8001/static/viewAPIs.html',
                 'Accept-Language',
                 'zh-CN',
                 'User-Agent',
                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                 'Accept-Encoding',
                 'gzip, deflate',
                 'Host',
                 'localhost:8001',
                 'If-Modified-Since',
                 'Sun, 19 Nov 2017 12:12:56 GMT',
                 'If-None-Match',
                 'W/"155c77-15fd4322140"',
                 'Connection',
                 'Keep-Alive' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/swagger-ui-bundle.js',
              method: 'GET',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: true,
              next: [Function: next],
              baseUrl: '/static',
              originalUrl: '/static/swagger-ui-bundle.js',
              _parsedUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/swagger-ui-bundle.js',
                 path: '/swagger-ui-bundle.js',
                 href: '/swagger-ui-bundle.js',
                 _raw: '/swagger-ui-bundle.js' },
              params: {},
              query: {},
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: 0,
                 _hasBody: false,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: 
                  { 'x-powered-by': 'Express',
                    'access-control-allow-origin': '*',
                    'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                    'access-control-allow-headers': 'Content-Type',
                    'accept-ranges': 'bytes',
                    'cache-control': 'public, max-age=0',
                    'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    etag: 'W/"155c77-15fd4322140"' },
                 _headerNames: 
                  { 'x-powered-by': 'X-Powered-By',
                    'access-control-allow-origin': 'Access-Control-Allow-Origin',
                    'access-control-allow-methods': 'Access-Control-Allow-Methods',
                    'access-control-allow-headers': 'Access-Control-Allow-Headers',
                    'accept-ranges': 'Accept-Ranges',
                    'cache-control': 'Cache-Control',
                    'last-modified': 'Last-Modified',
                    etag: 'ETag' },
                 _onPendingData: [Function: updateOutgoingData],
                 req: [Circular],
                 locals: {},
                 statusCode: 304,
                 statusMessage: 'Not Modified' },
              route: 
               Route {
                 path: '*',
                 stack: 
                  [ Layer {
                      handle: [Function],
                      name: '<anonymous>',
                      params: undefined,
                      path: undefined,
                      keys: [],
                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                      method: undefined } ],
                 methods: { _all: true } },
              _parsedOriginalUrl: 
               Url {
                 protocol: null,
                 slashes: null,
                 auth: null,
                 host: null,
                 port: null,
                 hostname: null,
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/static/swagger-ui-bundle.js',
                 path: '/static/swagger-ui-bundle.js',
                 href: '/static/swagger-ui-bundle.js',
                 _raw: '/static/swagger-ui-bundle.js' },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 57906 } },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 764,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 768,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 64493,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'application/javascript, */*;q=0.8',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"155c77-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'application/javascript, */*;q=0.8',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"155c77-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui-bundle.js',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui-bundle.js',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui-bundle.js',
                       path: '/swagger-ui-bundle.js',
                       href: '/swagger-ui-bundle.js',
                       _raw: '/swagger-ui-bundle.js' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"155c77-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui-bundle.js',
                       path: '/static/swagger-ui-bundle.js',
                       href: '/static/swagger-ui-bundle.js',
                       _raw: '/static/swagger-ui-bundle.js' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57906 } },
           _idleStart: 64492,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'text/css, */*',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"7fc0-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'text/css, */*',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"7fc0-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui.css',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui.css',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui.css',
                    path: '/swagger-ui.css',
                    href: '/swagger-ui.css',
                    _raw: '/swagger-ui.css' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"7fc0-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui.css',
                    path: '/static/swagger-ui.css',
                    href: '/static/swagger-ui.css',
                    _raw: '/static/swagger-ui.css' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57907 } } },
     _idleStart: 64494,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: 
         { 'x-powered-by': 'Express',
           'access-control-allow-origin': '*',
           'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
           'access-control-allow-headers': 'Content-Type' },
        _headerNames: 
         { 'x-powered-by': 'X-Powered-By',
           'access-control-allow-origin': 'Access-Control-Allow-Origin',
           'access-control-allow-methods': 'Access-Control-Allow-Methods',
           'access-control-allow-headers': 'Access-Control-Allow-Headers' },
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {} },
     _peername: { address: '::1', family: 'IPv6', port: 57904 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/static/uploads/json/file.json',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/static/uploads/json/file.json',
     path: '/static/uploads/json/file.json',
     href: '/static/uploads/json/file.json',
     _raw: '/static/uploads/json/file.json' },
  params: { '0': '/static/uploads/json/file.json' },
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: [],
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [ [Function: socketOnError] ],
           close: 
            [ [Function: serverSocketCloseListener],
              [Function: onServerResponseClose] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            CorkedRequest {
              next: CorkedRequest { next: null, entry: null, finish: [Function] },
              entry: null,
              finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 4836,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 768,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 764,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
              _idlePrev: [Circular],
              _idleStart: 64492,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'text/css, */*',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"7fc0-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'text/css, */*',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"7fc0-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui.css',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui.css',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui.css',
                       path: '/swagger-ui.css',
                       href: '/swagger-ui.css',
                       _raw: '/swagger-ui.css' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"7fc0-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui.css',
                       path: '/static/swagger-ui.css',
                       href: '/static/swagger-ui.css',
                       _raw: '/static/swagger-ui.css' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57907 } },
           _idlePrev: [Circular],
           _idleStart: 64493,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'application/javascript, */*;q=0.8',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"155c77-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'application/javascript, */*;q=0.8',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"155c77-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui-bundle.js',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui-bundle.js',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui-bundle.js',
                    path: '/swagger-ui-bundle.js',
                    href: '/swagger-ui-bundle.js',
                    _raw: '/swagger-ui-bundle.js' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"155c77-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui-bundle.js',
                    path: '/static/swagger-ui-bundle.js',
                    href: '/static/swagger-ui-bundle.js',
                    _raw: '/static/swagger-ui-bundle.js' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57906 } },
        _idlePrev: 
         { _idleNext: [Circular],
           _idlePrev: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 764,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: 
               Socket {
                 _connecting: false,
                 _hadError: false,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: true,
                    owner: [Circular],
                    onread: [Function: onread],
                    onconnection: null,
                    writeQueueSize: 0 },
                 _parent: null,
                 _host: null,
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: false,
                    endEmitted: false,
                    reading: true,
                    sync: false,
                    needReadable: true,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: 
                  { end: 
                     [ { [Function: g] listener: [Function: onend] },
                       [Function: socketOnEnd] ],
                    finish: [Function: onSocketFinish],
                    _socketEnd: [Function: onSocketEnd],
                    drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                    timeout: [Function],
                    error: [Function: socketOnError],
                    close: [ [Function: serverSocketCloseListener] ],
                    data: [Function: socketOnData],
                    resume: [Function: onSocketResume],
                    pause: [Function: onSocketPause] },
                 _eventsCount: 10,
                 _maxListeners: undefined,
                 _writableState: 
                  WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    decodeStrings: false,
                    defaultEncoding: 'utf8',
                    length: 0,
                    writing: false,
                    corked: 0,
                    sync: false,
                    bufferProcessing: false,
                    onwrite: [Function],
                    writecb: null,
                    writelen: 0,
                    bufferedRequest: null,
                    lastBufferedRequest: null,
                    pendingcb: 0,
                    prefinished: false,
                    errorEmitted: false,
                    bufferedRequestCount: 0,
                    corkedRequestsFree: 
                     CorkedRequest {
                       next: CorkedRequest { next: null, entry: null, finish: [Function] },
                       entry: null,
                       finish: [Function] } },
                 writable: true,
                 allowHalfOpen: true,
                 destroyed: false,
                 bytesRead: 0,
                 _bytesDispatched: 768,
                 _sockname: null,
                 _pendingData: null,
                 _pendingEncoding: '',
                 server: 
                  Server {
                    domain: null,
                    _events: 
                     { request: 
                        { [Function]
                          domain: undefined,
                          _events: { mount: [Function: onmount] },
                          _maxListeners: undefined,
                          setMaxListeners: [Function: setMaxListeners],
                          getMaxListeners: [Function: getMaxListeners],
                          emit: [Function: emit],
                          addListener: [Function: addListener],
                          on: [Function: addListener],
                          once: [Function: once],
                          removeListener: [Function: removeListener],
                          removeAllListeners: [Function: removeAllListeners],
                          listeners: [Function: listeners],
                          listenerCount: [Function: listenerCount],
                          init: [Function: init],
                          defaultConfiguration: [Function: defaultConfiguration],
                          lazyrouter: [Function: lazyrouter],
                          handle: [Function: handle],
                          use: [Function: use],
                          route: [Function: route],
                          engine: [Function: engine],
                          param: [Function: param],
                          set: [Function: set],
                          path: [Function: path],
                          enabled: [Function: enabled],
                          disabled: [Function: disabled],
                          enable: [Function: enable],
                          disable: [Function: disable],
                          checkout: [Function],
                          connect: [Function],
                          copy: [Function],
                          delete: [Function],
                          get: [Function],
                          head: [Function],
                          lock: [Function],
                          'm-search': [Function],
                          merge: [Function],
                          mkactivity: [Function],
                          mkcalendar: [Function],
                          mkcol: [Function],
                          move: [Function],
                          notify: [Function],
                          options: [Function],
                          patch: [Function],
                          post: [Function],
                          propfind: [Function],
                          proppatch: [Function],
                          purge: [Function],
                          put: [Function],
                          report: [Function],
                          search: [Function],
                          subscribe: [Function],
                          trace: [Function],
                          unlock: [Function],
                          unsubscribe: [Function],
                          all: [Function: all],
                          del: [Function],
                          render: [Function: render],
                          listen: [Function: listen],
                          request: IncomingMessage { app: [Circular] },
                          response: ServerResponse { app: [Circular] },
                          cache: {},
                          engines: {},
                          settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' },
                          _eventsCount: 1,
                          locals: 
                           { settings: 
                              { 'x-powered-by': true,
                                etag: 'weak',
                                'etag fn': [Function: generateETag],
                                env: 'development',
                                'query parser': 'extended',
                                'query parser fn': [Function: parseExtendedQueryString],
                                'subdomain offset': 2,
                                'trust proxy': false,
                                'trust proxy fn': [Function: trustNone],
                                view: [Function: View],
                                views: 'D:\\API-Gateway-v3-master\\src\\views',
                                'jsonp callback name': 'callback' } },
                          mountpath: '/',
                          _router: 
                           { [Function: router]
                             params: {},
                             _params: [],
                             caseSensitive: false,
                             mergeParams: undefined,
                             strict: false,
                             stack: 
                              [ Layer {
                                  handle: [Function: query],
                                  name: 'query',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: [Function: expressInit],
                                  name: 'expressInit',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: 
                                   { [Function: router]
                                     params: {},
                                     _params: [],
                                     caseSensitive: undefined,
                                     mergeParams: undefined,
                                     strict: undefined,
                                     stack: 
                                      [ Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [ { name: 0, optional: false, offset: 9 } ],
                                          regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/viewAPIs',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/doLogin',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/single',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: serveStatic],
                                          name: 'serveStatic',
                                          params: {},
                                          path: '/static',
                                          keys: [],
                                          regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                          route: undefined },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/combination/getFlowXML',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } } ] },
                                  name: 'router',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined } ] } },
                       connection: [Function: connectionListener],
                       clientError: [Function] },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _connections: 3,
                    _handle: 
                     TCP {
                       _externalStream: {},
                       fd: -1,
                       reading: false,
                       owner: [Circular],
                       onread: null,
                       onconnection: [Function: onconnection],
                       writeQueueSize: 0 },
                    _usingSlaves: false,
                    _slaves: [],
                    _unref: false,
                    allowHalfOpen: true,
                    pauseOnConnect: false,
                    httpAllowHalfOpen: false,
                    timeout: 120000,
                    _pendingResponseData: 0,
                    _connectionKey: '6::::8001' },
                 _server: 
                  Server {
                    domain: null,
                    _events: 
                     { request: 
                        { [Function]
                          domain: undefined,
                          _events: { mount: [Function: onmount] },
                          _maxListeners: undefined,
                          setMaxListeners: [Function: setMaxListeners],
                          getMaxListeners: [Function: getMaxListeners],
                          emit: [Function: emit],
                          addListener: [Function: addListener],
                          on: [Function: addListener],
                          once: [Function: once],
                          removeListener: [Function: removeListener],
                          removeAllListeners: [Function: removeAllListeners],
                          listeners: [Function: listeners],
                          listenerCount: [Function: listenerCount],
                          init: [Function: init],
                          defaultConfiguration: [Function: defaultConfiguration],
                          lazyrouter: [Function: lazyrouter],
                          handle: [Function: handle],
                          use: [Function: use],
                          route: [Function: route],
                          engine: [Function: engine],
                          param: [Function: param],
                          set: [Function: set],
                          path: [Function: path],
                          enabled: [Function: enabled],
                          disabled: [Function: disabled],
                          enable: [Function: enable],
                          disable: [Function: disable],
                          checkout: [Function],
                          connect: [Function],
                          copy: [Function],
                          delete: [Function],
                          get: [Function],
                          head: [Function],
                          lock: [Function],
                          'm-search': [Function],
                          merge: [Function],
                          mkactivity: [Function],
                          mkcalendar: [Function],
                          mkcol: [Function],
                          move: [Function],
                          notify: [Function],
                          options: [Function],
                          patch: [Function],
                          post: [Function],
                          propfind: [Function],
                          proppatch: [Function],
                          purge: [Function],
                          put: [Function],
                          report: [Function],
                          search: [Function],
                          subscribe: [Function],
                          trace: [Function],
                          unlock: [Function],
                          unsubscribe: [Function],
                          all: [Function: all],
                          del: [Function],
                          render: [Function: render],
                          listen: [Function: listen],
                          request: IncomingMessage { app: [Circular] },
                          response: ServerResponse { app: [Circular] },
                          cache: {},
                          engines: {},
                          settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' },
                          _eventsCount: 1,
                          locals: 
                           { settings: 
                              { 'x-powered-by': true,
                                etag: 'weak',
                                'etag fn': [Function: generateETag],
                                env: 'development',
                                'query parser': 'extended',
                                'query parser fn': [Function: parseExtendedQueryString],
                                'subdomain offset': 2,
                                'trust proxy': false,
                                'trust proxy fn': [Function: trustNone],
                                view: [Function: View],
                                views: 'D:\\API-Gateway-v3-master\\src\\views',
                                'jsonp callback name': 'callback' } },
                          mountpath: '/',
                          _router: 
                           { [Function: router]
                             params: {},
                             _params: [],
                             caseSensitive: false,
                             mergeParams: undefined,
                             strict: false,
                             stack: 
                              [ Layer {
                                  handle: [Function: query],
                                  name: 'query',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: [Function: expressInit],
                                  name: 'expressInit',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: 
                                   { [Function: router]
                                     params: {},
                                     _params: [],
                                     caseSensitive: undefined,
                                     mergeParams: undefined,
                                     strict: undefined,
                                     stack: 
                                      [ Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [ { name: 0, optional: false, offset: 9 } ],
                                          regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/viewAPIs',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/doLogin',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/single',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: serveStatic],
                                          name: 'serveStatic',
                                          params: {},
                                          path: '/static',
                                          keys: [],
                                          regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                          route: undefined },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/combination/getFlowXML',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } } ] },
                                  name: 'router',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined } ] } },
                       connection: [Function: connectionListener],
                       clientError: [Function] },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _connections: 3,
                    _handle: 
                     TCP {
                       _externalStream: {},
                       fd: -1,
                       reading: false,
                       owner: [Circular],
                       onread: null,
                       onconnection: [Function: onconnection],
                       writeQueueSize: 0 },
                    _usingSlaves: false,
                    _slaves: [],
                    _unref: false,
                    allowHalfOpen: true,
                    pauseOnConnect: false,
                    httpAllowHalfOpen: false,
                    timeout: 120000,
                    _pendingResponseData: 0,
                    _connectionKey: '6::::8001' },
                 _idleTimeout: 120000,
                 _idleNext: [Circular],
                 _idlePrev: [Circular],
                 _idleStart: 64493,
                 parser: 
                  HTTPParser {
                    '0': [Function: parserOnHeaders],
                    '1': [Function: parserOnHeadersComplete],
                    '2': [Function: parserOnBody],
                    '3': [Function: parserOnMessageComplete],
                    '4': [Function: onParserExecute],
                    _headers: [],
                    _url: '',
                    _consumed: true,
                    socket: [Circular],
                    incoming: 
                     IncomingMessage {
                       _readableState: 
                        ReadableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          buffer: [],
                          length: 0,
                          pipes: null,
                          pipesCount: 0,
                          flowing: true,
                          ended: true,
                          endEmitted: true,
                          reading: false,
                          sync: true,
                          needReadable: false,
                          emittedReadable: false,
                          readableListening: false,
                          resumeScheduled: false,
                          defaultEncoding: 'utf8',
                          ranOut: false,
                          awaitDrain: 0,
                          readingMore: false,
                          decoder: null,
                          encoding: null },
                       readable: false,
                       domain: null,
                       _events: { end: [Function], error: [Function] },
                       _eventsCount: 2,
                       _maxListeners: undefined,
                       socket: [Circular],
                       connection: [Circular],
                       httpVersionMajor: 1,
                       httpVersionMinor: 1,
                       httpVersion: '1.1',
                       complete: true,
                       headers: 
                        { accept: 'application/javascript, */*;q=0.8',
                          referer: 'http://localhost:8001/static/viewAPIs.html',
                          'accept-language': 'zh-CN',
                          'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                          'accept-encoding': 'gzip, deflate',
                          host: 'localhost:8001',
                          'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          'if-none-match': 'W/"155c77-15fd4322140"',
                          connection: 'Keep-Alive' },
                       rawHeaders: 
                        [ 'Accept',
                          'application/javascript, */*;q=0.8',
                          'Referer',
                          'http://localhost:8001/static/viewAPIs.html',
                          'Accept-Language',
                          'zh-CN',
                          'User-Agent',
                          'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                          'Accept-Encoding',
                          'gzip, deflate',
                          'Host',
                          'localhost:8001',
                          'If-Modified-Since',
                          'Sun, 19 Nov 2017 12:12:56 GMT',
                          'If-None-Match',
                          'W/"155c77-15fd4322140"',
                          'Connection',
                          'Keep-Alive' ],
                       trailers: {},
                       rawTrailers: [],
                       upgrade: false,
                       url: '/swagger-ui-bundle.js',
                       method: 'GET',
                       statusCode: null,
                       statusMessage: null,
                       client: [Circular],
                       _consuming: true,
                       _dumped: true,
                       next: [Function: next],
                       baseUrl: '/static',
                       originalUrl: '/static/swagger-ui-bundle.js',
                       _parsedUrl: 
                        Url {
                          protocol: null,
                          slashes: null,
                          auth: null,
                          host: null,
                          port: null,
                          hostname: null,
                          hash: null,
                          search: null,
                          query: null,
                          pathname: '/swagger-ui-bundle.js',
                          path: '/swagger-ui-bundle.js',
                          href: '/swagger-ui-bundle.js',
                          _raw: '/swagger-ui-bundle.js' },
                       params: {},
                       query: {},
                       res: 
                        ServerResponse {
                          domain: null,
                          _events: { finish: [Function: resOnFinish] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          output: [],
                          outputEncodings: [],
                          outputCallbacks: [],
                          outputSize: 0,
                          writable: true,
                          _last: false,
                          chunkedEncoding: false,
                          shouldKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: true,
                          _removedHeader: {},
                          _contentLength: 0,
                          _hasBody: false,
                          _trailer: '',
                          finished: true,
                          _headerSent: true,
                          socket: null,
                          connection: null,
                          _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                          _headers: 
                           { 'x-powered-by': 'Express',
                             'access-control-allow-origin': '*',
                             'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                             'access-control-allow-headers': 'Content-Type',
                             'accept-ranges': 'bytes',
                             'cache-control': 'public, max-age=0',
                             'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                             etag: 'W/"155c77-15fd4322140"' },
                          _headerNames: 
                           { 'x-powered-by': 'X-Powered-By',
                             'access-control-allow-origin': 'Access-Control-Allow-Origin',
                             'access-control-allow-methods': 'Access-Control-Allow-Methods',
                             'access-control-allow-headers': 'Access-Control-Allow-Headers',
                             'accept-ranges': 'Accept-Ranges',
                             'cache-control': 'Cache-Control',
                             'last-modified': 'Last-Modified',
                             etag: 'ETag' },
                          _onPendingData: [Function: updateOutgoingData],
                          req: [Circular],
                          locals: {},
                          statusCode: 304,
                          statusMessage: 'Not Modified' },
                       route: 
                        Route {
                          path: '*',
                          stack: 
                           [ Layer {
                               handle: [Function],
                               name: '<anonymous>',
                               params: undefined,
                               path: undefined,
                               keys: [],
                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                               method: undefined } ],
                          methods: { _all: true } },
                       _parsedOriginalUrl: 
                        Url {
                          protocol: null,
                          slashes: null,
                          auth: null,
                          host: null,
                          port: null,
                          hostname: null,
                          hash: null,
                          search: null,
                          query: null,
                          pathname: '/static/swagger-ui-bundle.js',
                          path: '/static/swagger-ui-bundle.js',
                          href: '/static/swagger-ui-bundle.js',
                          _raw: '/static/swagger-ui-bundle.js' },
                       read: [Function] },
                    outgoing: null,
                    maxHeaderPairs: 2000,
                    onIncoming: [Function: parserOnIncoming] },
                 on: [Function: socketOnWrap],
                 _paused: false,
                 read: [Function],
                 _consuming: true,
                 _httpMessage: null,
                 _peername: { address: '::1', family: 'IPv6', port: 57906 } },
              _idleStart: 64492,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'text/css, */*',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"7fc0-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'text/css, */*',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"7fc0-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui.css',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui.css',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui.css',
                       path: '/swagger-ui.css',
                       href: '/swagger-ui.css',
                       _raw: '/swagger-ui.css' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"7fc0-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui.css',
                       path: '/static/swagger-ui.css',
                       href: '/static/swagger-ui.css',
                       _raw: '/static/swagger-ui.css' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57907 } } },
        _idleStart: 64494,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: [Circular],
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: { address: '::1', family: 'IPv6', port: 57904 } },
     connection: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           _externalStream: {},
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: [],
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [ [Function: socketOnError] ],
           close: 
            [ [Function: serverSocketCloseListener],
              [Function: onServerResponseClose] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            CorkedRequest {
              next: CorkedRequest { next: null, entry: null, finish: [Function] },
              entry: null,
              finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 4836,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [Function]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 once: [Function: once],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'D:\\API-Gateway-v3-master\\src\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/static/uploads/json/file.json' },
                                 path: '/static/uploads/json/file.json',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [ { name: 0, optional: false, offset: 9 } ],
                                 regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: {},
                                 path: '/static',
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function],
                                         name: '<anonymous>',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener],
              clientError: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::8001' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           _connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              _externalStream: {},
              fd: -1,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: [],
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: [ [Function: serverSocketCloseListener] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           bytesRead: 0,
           _bytesDispatched: 768,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _server: 
            Server {
              domain: null,
              _events: 
               { request: 
                  { [Function]
                    domain: undefined,
                    _events: { mount: [Function: onmount] },
                    _maxListeners: undefined,
                    setMaxListeners: [Function: setMaxListeners],
                    getMaxListeners: [Function: getMaxListeners],
                    emit: [Function: emit],
                    addListener: [Function: addListener],
                    on: [Function: addListener],
                    once: [Function: once],
                    removeListener: [Function: removeListener],
                    removeAllListeners: [Function: removeAllListeners],
                    listeners: [Function: listeners],
                    listenerCount: [Function: listenerCount],
                    init: [Function: init],
                    defaultConfiguration: [Function: defaultConfiguration],
                    lazyrouter: [Function: lazyrouter],
                    handle: [Function: handle],
                    use: [Function: use],
                    route: [Function: route],
                    engine: [Function: engine],
                    param: [Function: param],
                    set: [Function: set],
                    path: [Function: path],
                    enabled: [Function: enabled],
                    disabled: [Function: disabled],
                    enable: [Function: enable],
                    disable: [Function: disable],
                    checkout: [Function],
                    connect: [Function],
                    copy: [Function],
                    delete: [Function],
                    get: [Function],
                    head: [Function],
                    lock: [Function],
                    'm-search': [Function],
                    merge: [Function],
                    mkactivity: [Function],
                    mkcalendar: [Function],
                    mkcol: [Function],
                    move: [Function],
                    notify: [Function],
                    options: [Function],
                    patch: [Function],
                    post: [Function],
                    propfind: [Function],
                    proppatch: [Function],
                    purge: [Function],
                    put: [Function],
                    report: [Function],
                    search: [Function],
                    subscribe: [Function],
                    trace: [Function],
                    unlock: [Function],
                    unsubscribe: [Function],
                    all: [Function: all],
                    del: [Function],
                    render: [Function: render],
                    listen: [Function: listen],
                    request: IncomingMessage { app: [Circular] },
                    response: ServerResponse { app: [Circular] },
                    cache: {},
                    engines: {},
                    settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'D:\\API-Gateway-v3-master\\src\\views',
                       'jsonp callback name': 'callback' },
                    _eventsCount: 1,
                    locals: 
                     { settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' } },
                    mountpath: '/',
                    _router: 
                     { [Function: router]
                       params: {},
                       _params: [],
                       caseSensitive: false,
                       mergeParams: undefined,
                       strict: false,
                       stack: 
                        [ Layer {
                            handle: [Function: query],
                            name: 'query',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: [Function: expressInit],
                            name: 'expressInit',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined },
                          Layer {
                            handle: 
                             { [Function: router]
                               params: {},
                               _params: [],
                               caseSensitive: undefined,
                               mergeParams: undefined,
                               strict: undefined,
                               stack: 
                                [ Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: { '0': '/static/uploads/json/file.json' },
                                    path: '/static/uploads/json/file.json',
                                    keys: [ { name: 0, optional: false, offset: 1 } ],
                                    regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [ { name: 0, optional: false, offset: 9 } ],
                                    regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/*',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: undefined } ],
                                       methods: { _all: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/uploads',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/register',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/viewAPIs',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/user/doLogin',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/apis/single',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'get' } ],
                                       methods: { get: true } } },
                                  Layer {
                                    handle: [Function: serveStatic],
                                    name: 'serveStatic',
                                    params: {},
                                    path: '/static',
                                    keys: [],
                                    regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                    route: undefined },
                                  Layer {
                                    handle: [Function: bound dispatch],
                                    name: 'bound dispatch',
                                    params: undefined,
                                    path: undefined,
                                    keys: [],
                                    regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                    route: 
                                     Route {
                                       path: '/combination/getFlowXML',
                                       stack: 
                                        [ Layer {
                                            handle: [Function],
                                            name: '<anonymous>',
                                            params: undefined,
                                            path: undefined,
                                            keys: [],
                                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                            method: 'post' } ],
                                       methods: { post: true } } } ] },
                            name: 'router',
                            params: {},
                            path: '',
                            keys: [],
                            regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                            route: undefined } ] } },
                 connection: [Function: connectionListener],
                 clientError: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::8001' },
           _idleTimeout: 120000,
           _idleNext: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 764,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
              _idlePrev: [Circular],
              _idleStart: 64492,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'text/css, */*',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"7fc0-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'text/css, */*',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"7fc0-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui.css',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui.css',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui.css',
                       path: '/swagger-ui.css',
                       href: '/swagger-ui.css',
                       _raw: '/swagger-ui.css' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"7fc0-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui.css',
                       path: '/static/swagger-ui.css',
                       href: '/static/swagger-ui.css',
                       _raw: '/static/swagger-ui.css' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57907 } },
           _idlePrev: [Circular],
           _idleStart: 64493,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: false,
                 domain: null,
                 _events: { end: [Function], error: [Function] },
                 _eventsCount: 2,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { accept: 'application/javascript, */*;q=0.8',
                    referer: 'http://localhost:8001/static/viewAPIs.html',
                    'accept-language': 'zh-CN',
                    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'accept-encoding': 'gzip, deflate',
                    host: 'localhost:8001',
                    'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                    'if-none-match': 'W/"155c77-15fd4322140"',
                    connection: 'Keep-Alive' },
                 rawHeaders: 
                  [ 'Accept',
                    'application/javascript, */*;q=0.8',
                    'Referer',
                    'http://localhost:8001/static/viewAPIs.html',
                    'Accept-Language',
                    'zh-CN',
                    'User-Agent',
                    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                    'Accept-Encoding',
                    'gzip, deflate',
                    'Host',
                    'localhost:8001',
                    'If-Modified-Since',
                    'Sun, 19 Nov 2017 12:12:56 GMT',
                    'If-None-Match',
                    'W/"155c77-15fd4322140"',
                    'Connection',
                    'Keep-Alive' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/swagger-ui-bundle.js',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: true,
                 _dumped: true,
                 next: [Function: next],
                 baseUrl: '/static',
                 originalUrl: '/static/swagger-ui-bundle.js',
                 _parsedUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/swagger-ui-bundle.js',
                    path: '/swagger-ui-bundle.js',
                    href: '/swagger-ui-bundle.js',
                    _raw: '/swagger-ui-bundle.js' },
                 params: {},
                 query: {},
                 res: 
                  ServerResponse {
                    domain: null,
                    _events: { finish: [Function: resOnFinish] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: false,
                    chunkedEncoding: false,
                    shouldKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: true,
                    _removedHeader: {},
                    _contentLength: 0,
                    _hasBody: false,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: null,
                    connection: null,
                    _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                    _headers: 
                     { 'x-powered-by': 'Express',
                       'access-control-allow-origin': '*',
                       'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                       'access-control-allow-headers': 'Content-Type',
                       'accept-ranges': 'bytes',
                       'cache-control': 'public, max-age=0',
                       'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       etag: 'W/"155c77-15fd4322140"' },
                    _headerNames: 
                     { 'x-powered-by': 'X-Powered-By',
                       'access-control-allow-origin': 'Access-Control-Allow-Origin',
                       'access-control-allow-methods': 'Access-Control-Allow-Methods',
                       'access-control-allow-headers': 'Access-Control-Allow-Headers',
                       'accept-ranges': 'Accept-Ranges',
                       'cache-control': 'Cache-Control',
                       'last-modified': 'Last-Modified',
                       etag: 'ETag' },
                    _onPendingData: [Function: updateOutgoingData],
                    req: [Circular],
                    locals: {},
                    statusCode: 304,
                    statusMessage: 'Not Modified' },
                 route: 
                  Route {
                    path: '*',
                    stack: 
                     [ Layer {
                         handle: [Function],
                         name: '<anonymous>',
                         params: undefined,
                         path: undefined,
                         keys: [],
                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                         method: undefined } ],
                    methods: { _all: true } },
                 _parsedOriginalUrl: 
                  Url {
                    protocol: null,
                    slashes: null,
                    auth: null,
                    host: null,
                    port: null,
                    hostname: null,
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/static/swagger-ui-bundle.js',
                    path: '/static/swagger-ui-bundle.js',
                    href: '/static/swagger-ui-bundle.js',
                    _raw: '/static/swagger-ui-bundle.js' },
                 read: [Function] },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: null,
           _peername: { address: '::1', family: 'IPv6', port: 57906 } },
        _idlePrev: 
         { _idleNext: [Circular],
           _idlePrev: 
            Socket {
              _connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 _externalStream: {},
                 fd: -1,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: [],
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: 
                  CorkedRequest {
                    next: CorkedRequest { next: null, entry: null, finish: [Function] },
                    entry: null,
                    finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              bytesRead: 0,
              _bytesDispatched: 764,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { request: 
                     { [Function]
                       domain: undefined,
                       _events: { mount: [Function: onmount] },
                       _maxListeners: undefined,
                       setMaxListeners: [Function: setMaxListeners],
                       getMaxListeners: [Function: getMaxListeners],
                       emit: [Function: emit],
                       addListener: [Function: addListener],
                       on: [Function: addListener],
                       once: [Function: once],
                       removeListener: [Function: removeListener],
                       removeAllListeners: [Function: removeAllListeners],
                       listeners: [Function: listeners],
                       listenerCount: [Function: listenerCount],
                       init: [Function: init],
                       defaultConfiguration: [Function: defaultConfiguration],
                       lazyrouter: [Function: lazyrouter],
                       handle: [Function: handle],
                       use: [Function: use],
                       route: [Function: route],
                       engine: [Function: engine],
                       param: [Function: param],
                       set: [Function: set],
                       path: [Function: path],
                       enabled: [Function: enabled],
                       disabled: [Function: disabled],
                       enable: [Function: enable],
                       disable: [Function: disable],
                       checkout: [Function],
                       connect: [Function],
                       copy: [Function],
                       delete: [Function],
                       get: [Function],
                       head: [Function],
                       lock: [Function],
                       'm-search': [Function],
                       merge: [Function],
                       mkactivity: [Function],
                       mkcalendar: [Function],
                       mkcol: [Function],
                       move: [Function],
                       notify: [Function],
                       options: [Function],
                       patch: [Function],
                       post: [Function],
                       propfind: [Function],
                       proppatch: [Function],
                       purge: [Function],
                       put: [Function],
                       report: [Function],
                       search: [Function],
                       subscribe: [Function],
                       trace: [Function],
                       unlock: [Function],
                       unsubscribe: [Function],
                       all: [Function: all],
                       del: [Function],
                       render: [Function: render],
                       listen: [Function: listen],
                       request: IncomingMessage { app: [Circular] },
                       response: ServerResponse { app: [Circular] },
                       cache: {},
                       engines: {},
                       settings: 
                        { 'x-powered-by': true,
                          etag: 'weak',
                          'etag fn': [Function: generateETag],
                          env: 'development',
                          'query parser': 'extended',
                          'query parser fn': [Function: parseExtendedQueryString],
                          'subdomain offset': 2,
                          'trust proxy': false,
                          'trust proxy fn': [Function: trustNone],
                          view: [Function: View],
                          views: 'D:\\API-Gateway-v3-master\\src\\views',
                          'jsonp callback name': 'callback' },
                       _eventsCount: 1,
                       locals: 
                        { settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' } },
                       mountpath: '/',
                       _router: 
                        { [Function: router]
                          params: {},
                          _params: [],
                          caseSensitive: false,
                          mergeParams: undefined,
                          strict: false,
                          stack: 
                           [ Layer {
                               handle: [Function: query],
                               name: 'query',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: [Function: expressInit],
                               name: 'expressInit',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined },
                             Layer {
                               handle: 
                                { [Function: router]
                                  params: {},
                                  _params: [],
                                  caseSensitive: undefined,
                                  mergeParams: undefined,
                                  strict: undefined,
                                  stack: 
                                   [ Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: { '0': '/static/uploads/json/file.json' },
                                       path: '/static/uploads/json/file.json',
                                       keys: [ { name: 0, optional: false, offset: 1 } ],
                                       regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [ { name: 0, optional: false, offset: 9 } ],
                                       regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/*',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: undefined } ],
                                          methods: { _all: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/uploads',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/register',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/viewAPIs',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/user/doLogin',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/apis/single',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'get' } ],
                                          methods: { get: true } } },
                                     Layer {
                                       handle: [Function: serveStatic],
                                       name: 'serveStatic',
                                       params: {},
                                       path: '/static',
                                       keys: [],
                                       regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                       route: undefined },
                                     Layer {
                                       handle: [Function: bound dispatch],
                                       name: 'bound dispatch',
                                       params: undefined,
                                       path: undefined,
                                       keys: [],
                                       regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                       route: 
                                        Route {
                                          path: '/combination/getFlowXML',
                                          stack: 
                                           [ Layer {
                                               handle: [Function],
                                               name: '<anonymous>',
                                               params: undefined,
                                               path: undefined,
                                               keys: [],
                                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                               method: 'post' } ],
                                          methods: { post: true } } } ] },
                               name: 'router',
                               params: {},
                               path: '',
                               keys: [],
                               regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                               route: undefined } ] } },
                    connection: [Function: connectionListener],
                    clientError: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::8001' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: 
               Socket {
                 _connecting: false,
                 _hadError: false,
                 _handle: 
                  TCP {
                    _externalStream: {},
                    fd: -1,
                    reading: true,
                    owner: [Circular],
                    onread: [Function: onread],
                    onconnection: null,
                    writeQueueSize: 0 },
                 _parent: null,
                 _host: null,
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: false,
                    endEmitted: false,
                    reading: true,
                    sync: false,
                    needReadable: true,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: 
                  { end: 
                     [ { [Function: g] listener: [Function: onend] },
                       [Function: socketOnEnd] ],
                    finish: [Function: onSocketFinish],
                    _socketEnd: [Function: onSocketEnd],
                    drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                    timeout: [Function],
                    error: [Function: socketOnError],
                    close: [ [Function: serverSocketCloseListener] ],
                    data: [Function: socketOnData],
                    resume: [Function: onSocketResume],
                    pause: [Function: onSocketPause] },
                 _eventsCount: 10,
                 _maxListeners: undefined,
                 _writableState: 
                  WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    decodeStrings: false,
                    defaultEncoding: 'utf8',
                    length: 0,
                    writing: false,
                    corked: 0,
                    sync: false,
                    bufferProcessing: false,
                    onwrite: [Function],
                    writecb: null,
                    writelen: 0,
                    bufferedRequest: null,
                    lastBufferedRequest: null,
                    pendingcb: 0,
                    prefinished: false,
                    errorEmitted: false,
                    bufferedRequestCount: 0,
                    corkedRequestsFree: 
                     CorkedRequest {
                       next: CorkedRequest { next: null, entry: null, finish: [Function] },
                       entry: null,
                       finish: [Function] } },
                 writable: true,
                 allowHalfOpen: true,
                 destroyed: false,
                 bytesRead: 0,
                 _bytesDispatched: 768,
                 _sockname: null,
                 _pendingData: null,
                 _pendingEncoding: '',
                 server: 
                  Server {
                    domain: null,
                    _events: 
                     { request: 
                        { [Function]
                          domain: undefined,
                          _events: { mount: [Function: onmount] },
                          _maxListeners: undefined,
                          setMaxListeners: [Function: setMaxListeners],
                          getMaxListeners: [Function: getMaxListeners],
                          emit: [Function: emit],
                          addListener: [Function: addListener],
                          on: [Function: addListener],
                          once: [Function: once],
                          removeListener: [Function: removeListener],
                          removeAllListeners: [Function: removeAllListeners],
                          listeners: [Function: listeners],
                          listenerCount: [Function: listenerCount],
                          init: [Function: init],
                          defaultConfiguration: [Function: defaultConfiguration],
                          lazyrouter: [Function: lazyrouter],
                          handle: [Function: handle],
                          use: [Function: use],
                          route: [Function: route],
                          engine: [Function: engine],
                          param: [Function: param],
                          set: [Function: set],
                          path: [Function: path],
                          enabled: [Function: enabled],
                          disabled: [Function: disabled],
                          enable: [Function: enable],
                          disable: [Function: disable],
                          checkout: [Function],
                          connect: [Function],
                          copy: [Function],
                          delete: [Function],
                          get: [Function],
                          head: [Function],
                          lock: [Function],
                          'm-search': [Function],
                          merge: [Function],
                          mkactivity: [Function],
                          mkcalendar: [Function],
                          mkcol: [Function],
                          move: [Function],
                          notify: [Function],
                          options: [Function],
                          patch: [Function],
                          post: [Function],
                          propfind: [Function],
                          proppatch: [Function],
                          purge: [Function],
                          put: [Function],
                          report: [Function],
                          search: [Function],
                          subscribe: [Function],
                          trace: [Function],
                          unlock: [Function],
                          unsubscribe: [Function],
                          all: [Function: all],
                          del: [Function],
                          render: [Function: render],
                          listen: [Function: listen],
                          request: IncomingMessage { app: [Circular] },
                          response: ServerResponse { app: [Circular] },
                          cache: {},
                          engines: {},
                          settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' },
                          _eventsCount: 1,
                          locals: 
                           { settings: 
                              { 'x-powered-by': true,
                                etag: 'weak',
                                'etag fn': [Function: generateETag],
                                env: 'development',
                                'query parser': 'extended',
                                'query parser fn': [Function: parseExtendedQueryString],
                                'subdomain offset': 2,
                                'trust proxy': false,
                                'trust proxy fn': [Function: trustNone],
                                view: [Function: View],
                                views: 'D:\\API-Gateway-v3-master\\src\\views',
                                'jsonp callback name': 'callback' } },
                          mountpath: '/',
                          _router: 
                           { [Function: router]
                             params: {},
                             _params: [],
                             caseSensitive: false,
                             mergeParams: undefined,
                             strict: false,
                             stack: 
                              [ Layer {
                                  handle: [Function: query],
                                  name: 'query',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: [Function: expressInit],
                                  name: 'expressInit',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: 
                                   { [Function: router]
                                     params: {},
                                     _params: [],
                                     caseSensitive: undefined,
                                     mergeParams: undefined,
                                     strict: undefined,
                                     stack: 
                                      [ Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [ { name: 0, optional: false, offset: 9 } ],
                                          regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/viewAPIs',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/doLogin',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/single',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: serveStatic],
                                          name: 'serveStatic',
                                          params: {},
                                          path: '/static',
                                          keys: [],
                                          regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                          route: undefined },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/combination/getFlowXML',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } } ] },
                                  name: 'router',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined } ] } },
                       connection: [Function: connectionListener],
                       clientError: [Function] },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _connections: 3,
                    _handle: 
                     TCP {
                       _externalStream: {},
                       fd: -1,
                       reading: false,
                       owner: [Circular],
                       onread: null,
                       onconnection: [Function: onconnection],
                       writeQueueSize: 0 },
                    _usingSlaves: false,
                    _slaves: [],
                    _unref: false,
                    allowHalfOpen: true,
                    pauseOnConnect: false,
                    httpAllowHalfOpen: false,
                    timeout: 120000,
                    _pendingResponseData: 0,
                    _connectionKey: '6::::8001' },
                 _server: 
                  Server {
                    domain: null,
                    _events: 
                     { request: 
                        { [Function]
                          domain: undefined,
                          _events: { mount: [Function: onmount] },
                          _maxListeners: undefined,
                          setMaxListeners: [Function: setMaxListeners],
                          getMaxListeners: [Function: getMaxListeners],
                          emit: [Function: emit],
                          addListener: [Function: addListener],
                          on: [Function: addListener],
                          once: [Function: once],
                          removeListener: [Function: removeListener],
                          removeAllListeners: [Function: removeAllListeners],
                          listeners: [Function: listeners],
                          listenerCount: [Function: listenerCount],
                          init: [Function: init],
                          defaultConfiguration: [Function: defaultConfiguration],
                          lazyrouter: [Function: lazyrouter],
                          handle: [Function: handle],
                          use: [Function: use],
                          route: [Function: route],
                          engine: [Function: engine],
                          param: [Function: param],
                          set: [Function: set],
                          path: [Function: path],
                          enabled: [Function: enabled],
                          disabled: [Function: disabled],
                          enable: [Function: enable],
                          disable: [Function: disable],
                          checkout: [Function],
                          connect: [Function],
                          copy: [Function],
                          delete: [Function],
                          get: [Function],
                          head: [Function],
                          lock: [Function],
                          'm-search': [Function],
                          merge: [Function],
                          mkactivity: [Function],
                          mkcalendar: [Function],
                          mkcol: [Function],
                          move: [Function],
                          notify: [Function],
                          options: [Function],
                          patch: [Function],
                          post: [Function],
                          propfind: [Function],
                          proppatch: [Function],
                          purge: [Function],
                          put: [Function],
                          report: [Function],
                          search: [Function],
                          subscribe: [Function],
                          trace: [Function],
                          unlock: [Function],
                          unsubscribe: [Function],
                          all: [Function: all],
                          del: [Function],
                          render: [Function: render],
                          listen: [Function: listen],
                          request: IncomingMessage { app: [Circular] },
                          response: ServerResponse { app: [Circular] },
                          cache: {},
                          engines: {},
                          settings: 
                           { 'x-powered-by': true,
                             etag: 'weak',
                             'etag fn': [Function: generateETag],
                             env: 'development',
                             'query parser': 'extended',
                             'query parser fn': [Function: parseExtendedQueryString],
                             'subdomain offset': 2,
                             'trust proxy': false,
                             'trust proxy fn': [Function: trustNone],
                             view: [Function: View],
                             views: 'D:\\API-Gateway-v3-master\\src\\views',
                             'jsonp callback name': 'callback' },
                          _eventsCount: 1,
                          locals: 
                           { settings: 
                              { 'x-powered-by': true,
                                etag: 'weak',
                                'etag fn': [Function: generateETag],
                                env: 'development',
                                'query parser': 'extended',
                                'query parser fn': [Function: parseExtendedQueryString],
                                'subdomain offset': 2,
                                'trust proxy': false,
                                'trust proxy fn': [Function: trustNone],
                                view: [Function: View],
                                views: 'D:\\API-Gateway-v3-master\\src\\views',
                                'jsonp callback name': 'callback' } },
                          mountpath: '/',
                          _router: 
                           { [Function: router]
                             params: {},
                             _params: [],
                             caseSensitive: false,
                             mergeParams: undefined,
                             strict: false,
                             stack: 
                              [ Layer {
                                  handle: [Function: query],
                                  name: 'query',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: [Function: expressInit],
                                  name: 'expressInit',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined },
                                Layer {
                                  handle: 
                                   { [Function: router]
                                     params: {},
                                     _params: [],
                                     caseSensitive: undefined,
                                     mergeParams: undefined,
                                     strict: undefined,
                                     stack: 
                                      [ Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: { '0': '/static/uploads/json/file.json' },
                                          path: '/static/uploads/json/file.json',
                                          keys: [ { name: 0, optional: false, offset: 1 } ],
                                          regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [ { name: 0, optional: false, offset: 9 } ],
                                          regexp: { /^\/apis\/(.*)\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/*',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: undefined } ],
                                             methods: { _all: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/uploads',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/register',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/viewAPIs',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/user/doLogin',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/apis/single',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'get' } ],
                                             methods: { get: true } } },
                                        Layer {
                                          handle: [Function: serveStatic],
                                          name: 'serveStatic',
                                          params: {},
                                          path: '/static',
                                          keys: [],
                                          regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                          route: undefined },
                                        Layer {
                                          handle: [Function: bound dispatch],
                                          name: 'bound dispatch',
                                          params: undefined,
                                          path: undefined,
                                          keys: [],
                                          regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                          route: 
                                           Route {
                                             path: '/combination/getFlowXML',
                                             stack: 
                                              [ Layer {
                                                  handle: [Function],
                                                  name: '<anonymous>',
                                                  params: undefined,
                                                  path: undefined,
                                                  keys: [],
                                                  regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                                  method: 'post' } ],
                                             methods: { post: true } } } ] },
                                  name: 'router',
                                  params: {},
                                  path: '',
                                  keys: [],
                                  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                                  route: undefined } ] } },
                       connection: [Function: connectionListener],
                       clientError: [Function] },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _connections: 3,
                    _handle: 
                     TCP {
                       _externalStream: {},
                       fd: -1,
                       reading: false,
                       owner: [Circular],
                       onread: null,
                       onconnection: [Function: onconnection],
                       writeQueueSize: 0 },
                    _usingSlaves: false,
                    _slaves: [],
                    _unref: false,
                    allowHalfOpen: true,
                    pauseOnConnect: false,
                    httpAllowHalfOpen: false,
                    timeout: 120000,
                    _pendingResponseData: 0,
                    _connectionKey: '6::::8001' },
                 _idleTimeout: 120000,
                 _idleNext: [Circular],
                 _idlePrev: [Circular],
                 _idleStart: 64493,
                 parser: 
                  HTTPParser {
                    '0': [Function: parserOnHeaders],
                    '1': [Function: parserOnHeadersComplete],
                    '2': [Function: parserOnBody],
                    '3': [Function: parserOnMessageComplete],
                    '4': [Function: onParserExecute],
                    _headers: [],
                    _url: '',
                    _consumed: true,
                    socket: [Circular],
                    incoming: 
                     IncomingMessage {
                       _readableState: 
                        ReadableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          buffer: [],
                          length: 0,
                          pipes: null,
                          pipesCount: 0,
                          flowing: true,
                          ended: true,
                          endEmitted: true,
                          reading: false,
                          sync: true,
                          needReadable: false,
                          emittedReadable: false,
                          readableListening: false,
                          resumeScheduled: false,
                          defaultEncoding: 'utf8',
                          ranOut: false,
                          awaitDrain: 0,
                          readingMore: false,
                          decoder: null,
                          encoding: null },
                       readable: false,
                       domain: null,
                       _events: { end: [Function], error: [Function] },
                       _eventsCount: 2,
                       _maxListeners: undefined,
                       socket: [Circular],
                       connection: [Circular],
                       httpVersionMajor: 1,
                       httpVersionMinor: 1,
                       httpVersion: '1.1',
                       complete: true,
                       headers: 
                        { accept: 'application/javascript, */*;q=0.8',
                          referer: 'http://localhost:8001/static/viewAPIs.html',
                          'accept-language': 'zh-CN',
                          'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                          'accept-encoding': 'gzip, deflate',
                          host: 'localhost:8001',
                          'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          'if-none-match': 'W/"155c77-15fd4322140"',
                          connection: 'Keep-Alive' },
                       rawHeaders: 
                        [ 'Accept',
                          'application/javascript, */*;q=0.8',
                          'Referer',
                          'http://localhost:8001/static/viewAPIs.html',
                          'Accept-Language',
                          'zh-CN',
                          'User-Agent',
                          'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                          'Accept-Encoding',
                          'gzip, deflate',
                          'Host',
                          'localhost:8001',
                          'If-Modified-Since',
                          'Sun, 19 Nov 2017 12:12:56 GMT',
                          'If-None-Match',
                          'W/"155c77-15fd4322140"',
                          'Connection',
                          'Keep-Alive' ],
                       trailers: {},
                       rawTrailers: [],
                       upgrade: false,
                       url: '/swagger-ui-bundle.js',
                       method: 'GET',
                       statusCode: null,
                       statusMessage: null,
                       client: [Circular],
                       _consuming: true,
                       _dumped: true,
                       next: [Function: next],
                       baseUrl: '/static',
                       originalUrl: '/static/swagger-ui-bundle.js',
                       _parsedUrl: 
                        Url {
                          protocol: null,
                          slashes: null,
                          auth: null,
                          host: null,
                          port: null,
                          hostname: null,
                          hash: null,
                          search: null,
                          query: null,
                          pathname: '/swagger-ui-bundle.js',
                          path: '/swagger-ui-bundle.js',
                          href: '/swagger-ui-bundle.js',
                          _raw: '/swagger-ui-bundle.js' },
                       params: {},
                       query: {},
                       res: 
                        ServerResponse {
                          domain: null,
                          _events: { finish: [Function: resOnFinish] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          output: [],
                          outputEncodings: [],
                          outputCallbacks: [],
                          outputSize: 0,
                          writable: true,
                          _last: false,
                          chunkedEncoding: false,
                          shouldKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: true,
                          _removedHeader: {},
                          _contentLength: 0,
                          _hasBody: false,
                          _trailer: '',
                          finished: true,
                          _headerSent: true,
                          socket: null,
                          connection: null,
                          _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"155c77-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                          _headers: 
                           { 'x-powered-by': 'Express',
                             'access-control-allow-origin': '*',
                             'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                             'access-control-allow-headers': 'Content-Type',
                             'accept-ranges': 'bytes',
                             'cache-control': 'public, max-age=0',
                             'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                             etag: 'W/"155c77-15fd4322140"' },
                          _headerNames: 
                           { 'x-powered-by': 'X-Powered-By',
                             'access-control-allow-origin': 'Access-Control-Allow-Origin',
                             'access-control-allow-methods': 'Access-Control-Allow-Methods',
                             'access-control-allow-headers': 'Access-Control-Allow-Headers',
                             'accept-ranges': 'Accept-Ranges',
                             'cache-control': 'Cache-Control',
                             'last-modified': 'Last-Modified',
                             etag: 'ETag' },
                          _onPendingData: [Function: updateOutgoingData],
                          req: [Circular],
                          locals: {},
                          statusCode: 304,
                          statusMessage: 'Not Modified' },
                       route: 
                        Route {
                          path: '*',
                          stack: 
                           [ Layer {
                               handle: [Function],
                               name: '<anonymous>',
                               params: undefined,
                               path: undefined,
                               keys: [],
                               regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                               method: undefined } ],
                          methods: { _all: true } },
                       _parsedOriginalUrl: 
                        Url {
                          protocol: null,
                          slashes: null,
                          auth: null,
                          host: null,
                          port: null,
                          hostname: null,
                          hash: null,
                          search: null,
                          query: null,
                          pathname: '/static/swagger-ui-bundle.js',
                          path: '/static/swagger-ui-bundle.js',
                          href: '/static/swagger-ui-bundle.js',
                          _raw: '/static/swagger-ui-bundle.js' },
                       read: [Function] },
                    outgoing: null,
                    maxHeaderPairs: 2000,
                    onIncoming: [Function: parserOnIncoming] },
                 on: [Function: socketOnWrap],
                 _paused: false,
                 read: [Function],
                 _consuming: true,
                 _httpMessage: null,
                 _peername: { address: '::1', family: 'IPv6', port: 57906 } },
              _idleStart: 64492,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: [],
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: true,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: null,
                       encoding: null },
                    readable: false,
                    domain: null,
                    _events: { end: [Function], error: [Function] },
                    _eventsCount: 2,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { accept: 'text/css, */*',
                       referer: 'http://localhost:8001/static/viewAPIs.html',
                       'accept-language': 'zh-CN',
                       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'accept-encoding': 'gzip, deflate',
                       host: 'localhost:8001',
                       'if-modified-since': 'Sun, 19 Nov 2017 12:12:56 GMT',
                       'if-none-match': 'W/"7fc0-15fd4322140"',
                       connection: 'Keep-Alive' },
                    rawHeaders: 
                     [ 'Accept',
                       'text/css, */*',
                       'Referer',
                       'http://localhost:8001/static/viewAPIs.html',
                       'Accept-Language',
                       'zh-CN',
                       'User-Agent',
                       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063',
                       'Accept-Encoding',
                       'gzip, deflate',
                       'Host',
                       'localhost:8001',
                       'If-Modified-Since',
                       'Sun, 19 Nov 2017 12:12:56 GMT',
                       'If-None-Match',
                       'W/"7fc0-15fd4322140"',
                       'Connection',
                       'Keep-Alive' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/swagger-ui.css',
                    method: 'GET',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: true,
                    next: [Function: next],
                    baseUrl: '/static',
                    originalUrl: '/static/swagger-ui.css',
                    _parsedUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/swagger-ui.css',
                       path: '/swagger-ui.css',
                       href: '/swagger-ui.css',
                       _raw: '/swagger-ui.css' },
                    params: {},
                    query: {},
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: 0,
                       _hasBody: false,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 304 Not Modified\r\nX-Powered-By: Express\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\r\nAccess-Control-Allow-Headers: Content-Type\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Sun, 19 Nov 2017 12:12:56 GMT\r\nETag: W/"7fc0-15fd4322140"\r\nDate: Thu, 23 Nov 2017 03:37:49 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: 
                        { 'x-powered-by': 'Express',
                          'access-control-allow-origin': '*',
                          'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
                          'access-control-allow-headers': 'Content-Type',
                          'accept-ranges': 'bytes',
                          'cache-control': 'public, max-age=0',
                          'last-modified': 'Sun, 19 Nov 2017 12:12:56 GMT',
                          etag: 'W/"7fc0-15fd4322140"' },
                       _headerNames: 
                        { 'x-powered-by': 'X-Powered-By',
                          'access-control-allow-origin': 'Access-Control-Allow-Origin',
                          'access-control-allow-methods': 'Access-Control-Allow-Methods',
                          'access-control-allow-headers': 'Access-Control-Allow-Headers',
                          'accept-ranges': 'Accept-Ranges',
                          'cache-control': 'Cache-Control',
                          'last-modified': 'Last-Modified',
                          etag: 'ETag' },
                       _onPendingData: [Function: updateOutgoingData],
                       req: [Circular],
                       locals: {},
                       statusCode: 304,
                       statusMessage: 'Not Modified' },
                    route: 
                     Route {
                       path: '*',
                       stack: 
                        [ Layer {
                            handle: [Function],
                            name: '<anonymous>',
                            params: undefined,
                            path: undefined,
                            keys: [],
                            regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                            method: undefined } ],
                       methods: { _all: true } },
                    _parsedOriginalUrl: 
                     Url {
                       protocol: null,
                       slashes: null,
                       auth: null,
                       host: null,
                       port: null,
                       hostname: null,
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/static/swagger-ui.css',
                       path: '/static/swagger-ui.css',
                       href: '/static/swagger-ui.css',
                       _raw: '/static/swagger-ui.css' },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 57907 } } },
        _idleStart: 64494,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: [Circular],
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: { address: '::1', family: 'IPv6', port: 57904 } },
     _header: null,
     _headers: 
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'access-control-allow-methods': 'PUT, GET, POST, DELETE, OPTIONS',
        'access-control-allow-headers': 'Content-Type' },
     _headerNames: 
      { 'x-powered-by': 'X-Powered-By',
        'access-control-allow-origin': 'Access-Control-Allow-Origin',
        'access-control-allow-methods': 'Access-Control-Allow-Methods',
        'access-control-allow-headers': 'Access-Control-Allow-Headers' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {} },
  route: 
   Route {
     path: '*',
     stack: 
      [ Layer {
          handle: [Function],
          name: '<anonymous>',
          params: undefined,
          path: undefined,
          keys: [],
          regexp: { /^\/?$/i fast_star: false, fast_slash: false },
          method: undefined } ],
     methods: { _all: true } } }