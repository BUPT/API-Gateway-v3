IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: { end: [Function], error: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 557,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: bound onceWrapper] listener: [Function: onend] },
           [Function: bound socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: 
         [ [Function: bound socketOnClose],
           [Function: onServerResponseClose] ],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         { next: null,
           entry: null,
           finish: [Function: bound onCorkedFinish] } },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3654713,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(outHeadersKey)]: 
         { 'x-powered-by': [ 'X-Powered-By', 'Express' ],
           'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ],
           'access-control-allow-methods': 
            [ 'Access-Control-Allow-Methods',
              'PUT, GET, POST, DELETE, OPTIONS' ],
           'access-control-allow-headers': [ 'Access-Control-Allow-Headers', 'Content-Type' ] } },
     _peername: { address: '::ffff:10.108.213.44', family: 'IPv6', port: 54512 },
     [Symbol(asyncId)]: 3937,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3939,
     [Symbol(triggerAsyncId)]: 26 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 557,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: bound onceWrapper] listener: [Function: onend] },
           [Function: bound socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: 
         [ [Function: bound socketOnClose],
           [Function: onServerResponseClose] ],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         { next: null,
           entry: null,
           finish: [Function: bound onCorkedFinish] } },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3654713,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(outHeadersKey)]: 
         { 'x-powered-by': [ 'X-Powered-By', 'Express' ],
           'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ],
           'access-control-allow-methods': 
            [ 'Access-Control-Allow-Methods',
              'PUT, GET, POST, DELETE, OPTIONS' ],
           'access-control-allow-headers': [ 'Access-Control-Allow-Headers', 'Content-Type' ] } },
     _peername: { address: '::ffff:10.108.213.44', family: 'IPv6', port: 54512 },
     [Symbol(asyncId)]: 3937,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3939,
     [Symbol(triggerAsyncId)]: 26 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'www.linyimin.club:8001',
     connection: 'keep-alive',
     accept: 'application/json, text/plain, */*',
     origin: 'http://localhost:63342',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',
     referer: 'http://localhost:63342/Documents/API%E7%BD%91%E5%85%B3/API%20combination/app/UIRoute3.html?_ijt=tncvbbg14g96rgrpq2rb6uh9mb',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'zh-CN,zh;q=0.9',
     'if-none-match': 'W/"453-T0pJDIH4sm3DW/XEC5ieeITtPXU"' },
  rawHeaders: 
   [ 'Host',
     'www.linyimin.club:8001',
     'Connection',
     'keep-alive',
     'Accept',
     'application/json, text/plain, */*',
     'Origin',
     'http://localhost:63342',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',
     'Referer',
     'http://localhost:63342/Documents/API%E7%BD%91%E5%85%B3/API%20combination/app/UIRoute3.html?_ijt=tncvbbg14g96rgrpq2rb6uh9mb',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'zh-CN,zh;q=0.9',
     'If-None-Match',
     'W/"453-T0pJDIH4sm3DW/XEC5ieeITtPXU"' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/apis/getAllAPIInfoWithKong',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 557,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: bound onceWrapper] listener: [Function: onend] },
           [Function: bound socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: 
         [ [Function: bound socketOnClose],
           [Function: onServerResponseClose] ],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         { next: null,
           entry: null,
           finish: [Function: bound onCorkedFinish] } },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _server: 
      Server {
        domain: null,
        _events: 
         { request: 
            { [EventEmitter: app]
              domain: undefined,
              _events: { mount: [Function: onmount] },
              _maxListeners: undefined,
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
              init: [Function: init],
              defaultConfiguration: [Function: defaultConfiguration],
              lazyrouter: [Function: lazyrouter],
              handle: [Function: handle],
              use: [Function: use],
              route: [Function: route],
              engine: [Function: engine],
              param: [Function: param],
              set: [Function: set],
              path: [Function: path],
              enabled: [Function: enabled],
              disabled: [Function: disabled],
              enable: [Function: enable],
              disable: [Function: disable],
              acl: [Function],
              bind: [Function],
              checkout: [Function],
              connect: [Function],
              copy: [Function],
              delete: [Function],
              get: [Function],
              head: [Function],
              link: [Function],
              lock: [Function],
              'm-search': [Function],
              merge: [Function],
              mkactivity: [Function],
              mkcalendar: [Function],
              mkcol: [Function],
              move: [Function],
              notify: [Function],
              options: [Function],
              patch: [Function],
              post: [Function],
              propfind: [Function],
              proppatch: [Function],
              purge: [Function],
              put: [Function],
              rebind: [Function],
              report: [Function],
              search: [Function],
              subscribe: [Function],
              trace: [Function],
              unbind: [Function],
              unlink: [Function],
              unlock: [Function],
              unsubscribe: [Function],
              all: [Function: all],
              del: [Function],
              render: [Function: render],
              listen: [Function: listen],
              request: IncomingMessage { app: [Circular] },
              response: ServerResponse { app: [Circular] },
              cache: {},
              engines: {},
              settings: 
               { 'x-powered-by': true,
                 etag: 'weak',
                 'etag fn': [Function: generateETag],
                 env: 'development',
                 'query parser': 'extended',
                 'query parser fn': [Function: parseExtendedQueryString],
                 'subdomain offset': 2,
                 'trust proxy': false,
                 'trust proxy fn': [Function: trustNone],
                 view: [Function: View],
                 views: 'F:\\项目\\API-Gateway-v3\\views',
                 'jsonp callback name': 'callback' },
              _eventsCount: 1,
              locals: 
               { settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' } },
              mountpath: '/',
              _router: 
               { [Function: router]
                 params: {},
                 _params: [],
                 caseSensitive: false,
                 mergeParams: undefined,
                 strict: false,
                 stack: 
                  [ Layer {
                      handle: [Function: query],
                      name: 'query',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: [Function: expressInit],
                      name: 'expressInit',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined },
                    Layer {
                      handle: 
                       { [Function: router]
                         params: {},
                         _params: [],
                         caseSensitive: undefined,
                         mergeParams: undefined,
                         strict: undefined,
                         stack: 
                          [ Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: allowCORSAccess],
                                      name: 'allowCORSAccess',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: { '0': '/apis/getAllAPIInfoWithKong' },
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [ { name: 0, optional: false, offset: 1 } ],
                              regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                              route: 
                               Route {
                                 path: '*',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: logPerformanceMonitor],
                                      name: 'logPerformanceMonitor',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: undefined } ],
                                 methods: { _all: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: APIRegister],
                                      name: 'APIRegister',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: uploadFileView],
                                      name: 'uploadFileView',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/uploads',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: upload],
                                      name: 'upload',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/viewAPIs',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewAPIs],
                                      name: 'viewAPIs',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/doLogin',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: doLogin],
                                      name: 'doLogin',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/register',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: register],
                                      name: 'register',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getAllUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllUser],
                                      name: 'getAllUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/getUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getUserByname],
                                      name: 'getUserByname',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/removeUserByName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: removeUserByName],
                                      name: 'removeUserByName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/user/updateUser',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: updateUser],
                                      name: 'updateUser',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/single',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: viewSingleAPI],
                                      name: 'viewSingleAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: serveStatic],
                              name: 'serveStatic',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                              route: undefined },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/combination/getFlowXML',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFloWXMLFile],
                                      name: 'getFloWXMLFile',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'post' } ],
                                 methods: { post: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPI],
                                      name: 'getAllAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getAllAPIInfoWithKong',
                              keys: [],
                              regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAllAPIInfoWithKong',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAllAPIInfoWithKong],
                                      name: 'getAllAPIInfoWithKong',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: {},
                              path: '/apis/getApiInfoByType',
                              keys: [],
                              regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getApiInfoByType',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getApiInfoByType],
                                      name: 'getApiInfoByType',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/renameServiceName',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: renameServiceName],
                                      name: 'renameServiceName',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/debugAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: debugAPI],
                                      name: 'debugAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getCombinationApiFlowXml',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getFlowData],
                                      name: 'getFlowData',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/storeAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: storeAtomApiInfo],
                                      name: 'storeAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/getAtomApiInfo',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: getAtomApiInfo],
                                      name: 'getAtomApiInfo',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } },
                            Layer {
                              handle: [Function: bound dispatch],
                              name: 'bound dispatch',
                              params: undefined,
                              path: undefined,
                              keys: [],
                              regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                              route: 
                               Route {
                                 path: '/apis/registerCombinationAPI',
                                 stack: 
                                  [ Layer {
                                      handle: [Function: registerCombinationAPI],
                                      name: 'registerCombinationAPI',
                                      params: undefined,
                                      path: undefined,
                                      keys: [],
                                      regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                      method: 'get' } ],
                                 methods: { get: true } } } ] },
                      name: 'router',
                      params: {},
                      path: '',
                      keys: [],
                      regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                      route: undefined } ] } },
           connection: [Function: connectionListener] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: [External],
           fd: -1,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8001',
        [Symbol(asyncId)]: 26 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3654713,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(outHeadersKey)]: 
         { 'x-powered-by': [ 'X-Powered-By', 'Express' ],
           'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ],
           'access-control-allow-methods': 
            [ 'Access-Control-Allow-Methods',
              'PUT, GET, POST, DELETE, OPTIONS' ],
           'access-control-allow-headers': [ 'Access-Control-Allow-Headers', 'Content-Type' ] } },
     _peername: { address: '::ffff:10.108.213.44', family: 'IPv6', port: 54512 },
     [Symbol(asyncId)]: 3937,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3939,
     [Symbol(triggerAsyncId)]: 26 },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/apis/getAllAPIInfoWithKong',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/apis/getAllAPIInfoWithKong',
     path: '/apis/getAllAPIInfoWithKong',
     href: '/apis/getAllAPIInfoWithKong',
     _raw: '/apis/getAllAPIInfoWithKong' },
  params: { '0': '/apis/getAllAPIInfoWithKong' },
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           bytesRead: 557,
           _externalStream: [External],
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0,
           _consumed: true },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: bound onceWrapper] listener: [Function: onend] },
              [Function: bound socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
           timeout: [Function: socketOnTimeout],
           data: [Function: bound socketOnData],
           error: [Function: socketOnError],
           close: 
            [ [Function: bound socketOnClose],
              [Function: onServerResponseClose] ],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: true,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [EventEmitter: app]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 prependListener: [Function: prependListener],
                 once: [Function: once],
                 prependOnceListener: [Function: prependOnceListener],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 eventNames: [Function: eventNames],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 acl: [Function],
                 bind: [Function],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 link: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 rebind: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unbind: [Function],
                 unlink: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'F:\\项目\\API-Gateway-v3\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: allowCORSAccess],
                                         name: 'allowCORSAccess',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: logPerformanceMonitor],
                                         name: 'logPerformanceMonitor',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: APIRegister],
                                         name: 'APIRegister',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: uploadFileView],
                                         name: 'uploadFileView',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: upload],
                                         name: 'upload',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewAPIs],
                                         name: 'viewAPIs',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: doLogin],
                                         name: 'doLogin',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: register],
                                         name: 'register',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getAllUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllUser],
                                         name: 'getAllUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getUserByname],
                                         name: 'getUserByname',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/removeUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: removeUserByName],
                                         name: 'removeUserByName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/updateUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: updateUser],
                                         name: 'updateUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewSingleAPI],
                                         name: 'viewSingleAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFloWXMLFile],
                                         name: 'getFloWXMLFile',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPI],
                                         name: 'getAllAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPIInfoWithKong',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPIInfoWithKong],
                                         name: 'getAllAPIInfoWithKong',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getApiInfoByType',
                                 keys: [],
                                 regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getApiInfoByType',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getApiInfoByType],
                                         name: 'getApiInfoByType',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/renameServiceName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: renameServiceName],
                                         name: 'renameServiceName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/debugAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: debugAPI],
                                         name: 'debugAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getCombinationApiFlowXml',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFlowData],
                                         name: 'getFlowData',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/storeAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: storeAtomApiInfo],
                                         name: 'storeAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAtomApiInfo],
                                         name: 'getAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/registerCombinationAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: registerCombinationAPI],
                                         name: 'registerCombinationAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener] },
           _eventsCount: 2,
           _maxListeners: undefined,
           _connections: 1,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: [External],
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           keepAliveTimeout: 5000,
           _pendingResponseData: 0,
           maxHeadersCount: null,
           _connectionKey: '6::::8001',
           [Symbol(asyncId)]: 26 },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [EventEmitter: app]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 prependListener: [Function: prependListener],
                 once: [Function: once],
                 prependOnceListener: [Function: prependOnceListener],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 eventNames: [Function: eventNames],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 acl: [Function],
                 bind: [Function],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 link: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 rebind: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unbind: [Function],
                 unlink: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'F:\\项目\\API-Gateway-v3\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: allowCORSAccess],
                                         name: 'allowCORSAccess',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: logPerformanceMonitor],
                                         name: 'logPerformanceMonitor',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: APIRegister],
                                         name: 'APIRegister',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: uploadFileView],
                                         name: 'uploadFileView',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: upload],
                                         name: 'upload',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewAPIs],
                                         name: 'viewAPIs',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: doLogin],
                                         name: 'doLogin',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: register],
                                         name: 'register',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getAllUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllUser],
                                         name: 'getAllUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getUserByname],
                                         name: 'getUserByname',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/removeUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: removeUserByName],
                                         name: 'removeUserByName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/updateUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: updateUser],
                                         name: 'updateUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewSingleAPI],
                                         name: 'viewSingleAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFloWXMLFile],
                                         name: 'getFloWXMLFile',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPI],
                                         name: 'getAllAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPIInfoWithKong',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPIInfoWithKong],
                                         name: 'getAllAPIInfoWithKong',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getApiInfoByType',
                                 keys: [],
                                 regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getApiInfoByType',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getApiInfoByType],
                                         name: 'getApiInfoByType',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/renameServiceName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: renameServiceName],
                                         name: 'renameServiceName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/debugAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: debugAPI],
                                         name: 'debugAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getCombinationApiFlowXml',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFlowData],
                                         name: 'getFlowData',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/storeAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: storeAtomApiInfo],
                                         name: 'storeAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAtomApiInfo],
                                         name: 'getAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/registerCombinationAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: registerCombinationAPI],
                                         name: 'registerCombinationAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener] },
           _eventsCount: 2,
           _maxListeners: undefined,
           _connections: 1,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: [External],
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           keepAliveTimeout: 5000,
           _pendingResponseData: 0,
           maxHeadersCount: null,
           _connectionKey: '6::::8001',
           [Symbol(asyncId)]: 26 },
        _idleTimeout: 120000,
        _idleNext: 
         TimersList {
           _idleNext: [Circular],
           _idlePrev: [Circular],
           _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
           _unrefed: true,
           msecs: 120000,
           nextTick: false },
        _idlePrev: 
         TimersList {
           _idleNext: [Circular],
           _idlePrev: [Circular],
           _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
           _unrefed: true,
           msecs: 120000,
           nextTick: false },
        _idleStart: 3654713,
        _destroyed: false,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: bound onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: [Circular],
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: bound parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: { address: '::ffff:10.108.213.44', family: 'IPv6', port: 54512 },
        [Symbol(asyncId)]: 3937,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 3939,
        [Symbol(triggerAsyncId)]: 26 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           bytesRead: 557,
           _externalStream: [External],
           fd: -1,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0,
           _consumed: true },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: bound onceWrapper] listener: [Function: onend] },
              [Function: bound socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
           timeout: [Function: socketOnTimeout],
           data: [Function: bound socketOnData],
           error: [Function: socketOnError],
           close: 
            [ [Function: bound socketOnClose],
              [Function: onServerResponseClose] ],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: true,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: 
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [EventEmitter: app]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 prependListener: [Function: prependListener],
                 once: [Function: once],
                 prependOnceListener: [Function: prependOnceListener],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 eventNames: [Function: eventNames],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 acl: [Function],
                 bind: [Function],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 link: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 rebind: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unbind: [Function],
                 unlink: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'F:\\项目\\API-Gateway-v3\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: allowCORSAccess],
                                         name: 'allowCORSAccess',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: logPerformanceMonitor],
                                         name: 'logPerformanceMonitor',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: APIRegister],
                                         name: 'APIRegister',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: uploadFileView],
                                         name: 'uploadFileView',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: upload],
                                         name: 'upload',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewAPIs],
                                         name: 'viewAPIs',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: doLogin],
                                         name: 'doLogin',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: register],
                                         name: 'register',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getAllUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllUser],
                                         name: 'getAllUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getUserByname],
                                         name: 'getUserByname',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/removeUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: removeUserByName],
                                         name: 'removeUserByName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/updateUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: updateUser],
                                         name: 'updateUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewSingleAPI],
                                         name: 'viewSingleAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFloWXMLFile],
                                         name: 'getFloWXMLFile',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPI],
                                         name: 'getAllAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPIInfoWithKong',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPIInfoWithKong],
                                         name: 'getAllAPIInfoWithKong',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getApiInfoByType',
                                 keys: [],
                                 regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getApiInfoByType',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getApiInfoByType],
                                         name: 'getApiInfoByType',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/renameServiceName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: renameServiceName],
                                         name: 'renameServiceName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/debugAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: debugAPI],
                                         name: 'debugAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getCombinationApiFlowXml',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFlowData],
                                         name: 'getFlowData',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/storeAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: storeAtomApiInfo],
                                         name: 'storeAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAtomApiInfo],
                                         name: 'getAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/registerCombinationAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: registerCombinationAPI],
                                         name: 'registerCombinationAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener] },
           _eventsCount: 2,
           _maxListeners: undefined,
           _connections: 1,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: [External],
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           keepAliveTimeout: 5000,
           _pendingResponseData: 0,
           maxHeadersCount: null,
           _connectionKey: '6::::8001',
           [Symbol(asyncId)]: 26 },
        _server: 
         Server {
           domain: null,
           _events: 
            { request: 
               { [EventEmitter: app]
                 domain: undefined,
                 _events: { mount: [Function: onmount] },
                 _maxListeners: undefined,
                 setMaxListeners: [Function: setMaxListeners],
                 getMaxListeners: [Function: getMaxListeners],
                 emit: [Function: emit],
                 addListener: [Function: addListener],
                 on: [Function: addListener],
                 prependListener: [Function: prependListener],
                 once: [Function: once],
                 prependOnceListener: [Function: prependOnceListener],
                 removeListener: [Function: removeListener],
                 removeAllListeners: [Function: removeAllListeners],
                 listeners: [Function: listeners],
                 listenerCount: [Function: listenerCount],
                 eventNames: [Function: eventNames],
                 init: [Function: init],
                 defaultConfiguration: [Function: defaultConfiguration],
                 lazyrouter: [Function: lazyrouter],
                 handle: [Function: handle],
                 use: [Function: use],
                 route: [Function: route],
                 engine: [Function: engine],
                 param: [Function: param],
                 set: [Function: set],
                 path: [Function: path],
                 enabled: [Function: enabled],
                 disabled: [Function: disabled],
                 enable: [Function: enable],
                 disable: [Function: disable],
                 acl: [Function],
                 bind: [Function],
                 checkout: [Function],
                 connect: [Function],
                 copy: [Function],
                 delete: [Function],
                 get: [Function],
                 head: [Function],
                 link: [Function],
                 lock: [Function],
                 'm-search': [Function],
                 merge: [Function],
                 mkactivity: [Function],
                 mkcalendar: [Function],
                 mkcol: [Function],
                 move: [Function],
                 notify: [Function],
                 options: [Function],
                 patch: [Function],
                 post: [Function],
                 propfind: [Function],
                 proppatch: [Function],
                 purge: [Function],
                 put: [Function],
                 rebind: [Function],
                 report: [Function],
                 search: [Function],
                 subscribe: [Function],
                 trace: [Function],
                 unbind: [Function],
                 unlink: [Function],
                 unlock: [Function],
                 unsubscribe: [Function],
                 all: [Function: all],
                 del: [Function],
                 render: [Function: render],
                 listen: [Function: listen],
                 request: IncomingMessage { app: [Circular] },
                 response: ServerResponse { app: [Circular] },
                 cache: {},
                 engines: {},
                 settings: 
                  { 'x-powered-by': true,
                    etag: 'weak',
                    'etag fn': [Function: generateETag],
                    env: 'development',
                    'query parser': 'extended',
                    'query parser fn': [Function: parseExtendedQueryString],
                    'subdomain offset': 2,
                    'trust proxy': false,
                    'trust proxy fn': [Function: trustNone],
                    view: [Function: View],
                    views: 'F:\\项目\\API-Gateway-v3\\views',
                    'jsonp callback name': 'callback' },
                 _eventsCount: 1,
                 locals: 
                  { settings: 
                     { 'x-powered-by': true,
                       etag: 'weak',
                       'etag fn': [Function: generateETag],
                       env: 'development',
                       'query parser': 'extended',
                       'query parser fn': [Function: parseExtendedQueryString],
                       'subdomain offset': 2,
                       'trust proxy': false,
                       'trust proxy fn': [Function: trustNone],
                       view: [Function: View],
                       views: 'F:\\项目\\API-Gateway-v3\\views',
                       'jsonp callback name': 'callback' } },
                 mountpath: '/',
                 _router: 
                  { [Function: router]
                    params: {},
                    _params: [],
                    caseSensitive: false,
                    mergeParams: undefined,
                    strict: false,
                    stack: 
                     [ Layer {
                         handle: [Function: query],
                         name: 'query',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: [Function: expressInit],
                         name: 'expressInit',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined },
                       Layer {
                         handle: 
                          { [Function: router]
                            params: {},
                            _params: [],
                            caseSensitive: undefined,
                            mergeParams: undefined,
                            strict: undefined,
                            stack: 
                             [ Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: allowCORSAccess],
                                         name: 'allowCORSAccess',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: { '0': '/apis/getAllAPIInfoWithKong' },
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [ { name: 0, optional: false, offset: 1 } ],
                                 regexp: { /^(.*)\/?$/i fast_star: true, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '*',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: logPerformanceMonitor],
                                         name: 'logPerformanceMonitor',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: undefined } ],
                                    methods: { _all: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: APIRegister],
                                         name: 'APIRegister',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: uploadFileView],
                                         name: 'uploadFileView',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/uploads\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/uploads',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: upload],
                                         name: 'upload',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/viewAPIs\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/viewAPIs',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewAPIs],
                                         name: 'viewAPIs',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/doLogin\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/doLogin',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: doLogin],
                                         name: 'doLogin',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/register\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/register',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: register],
                                         name: 'register',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getAllUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getAllUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllUser],
                                         name: 'getAllUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/getUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/getUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getUserByname],
                                         name: 'getUserByname',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/removeUserByName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/removeUserByName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: removeUserByName],
                                         name: 'removeUserByName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/user\/updateUser\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/user/updateUser',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: updateUser],
                                         name: 'updateUser',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/single\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/single',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: viewSingleAPI],
                                         name: 'viewSingleAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: serveStatic],
                                 name: 'serveStatic',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/static\/?(?=\/|$)/i fast_star: false, fast_slash: false },
                                 route: undefined },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/combination\/getFlowXML\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/combination/getFlowXML',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFloWXMLFile],
                                         name: 'getFloWXMLFile',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'post' } ],
                                    methods: { post: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPI],
                                         name: 'getAllAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getAllAPIInfoWithKong',
                                 keys: [],
                                 regexp: { /^\/apis\/getAllAPIInfoWithKong\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAllAPIInfoWithKong',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAllAPIInfoWithKong],
                                         name: 'getAllAPIInfoWithKong',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: {},
                                 path: '/apis/getApiInfoByType',
                                 keys: [],
                                 regexp: { /^\/apis\/getApiInfoByType\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getApiInfoByType',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getApiInfoByType],
                                         name: 'getApiInfoByType',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/renameServiceName\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/renameServiceName',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: renameServiceName],
                                         name: 'renameServiceName',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/debugAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/debugAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: debugAPI],
                                         name: 'debugAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getCombinationApiFlowXml\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getCombinationApiFlowXml',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getFlowData],
                                         name: 'getFlowData',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/storeAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/storeAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: storeAtomApiInfo],
                                         name: 'storeAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/getAtomApiInfo\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/getAtomApiInfo',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: getAtomApiInfo],
                                         name: 'getAtomApiInfo',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } },
                               Layer {
                                 handle: [Function: bound dispatch],
                                 name: 'bound dispatch',
                                 params: undefined,
                                 path: undefined,
                                 keys: [],
                                 regexp: { /^\/apis\/registerCombinationAPI\/?$/i fast_star: false, fast_slash: false },
                                 route: 
                                  Route {
                                    path: '/apis/registerCombinationAPI',
                                    stack: 
                                     [ Layer {
                                         handle: [Function: registerCombinationAPI],
                                         name: 'registerCombinationAPI',
                                         params: undefined,
                                         path: undefined,
                                         keys: [],
                                         regexp: { /^\/?$/i fast_star: false, fast_slash: false },
                                         method: 'get' } ],
                                    methods: { get: true } } } ] },
                         name: 'router',
                         params: {},
                         path: '',
                         keys: [],
                         regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
                         route: undefined } ] } },
              connection: [Function: connectionListener] },
           _eventsCount: 2,
           _maxListeners: undefined,
           _connections: 1,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: [External],
              fd: -1,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           keepAliveTimeout: 5000,
           _pendingResponseData: 0,
           maxHeadersCount: null,
           _connectionKey: '6::::8001',
           [Symbol(asyncId)]: 26 },
        _idleTimeout: 120000,
        _idleNext: 
         TimersList {
           _idleNext: [Circular],
           _idlePrev: [Circular],
           _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
           _unrefed: true,
           msecs: 120000,
           nextTick: false },
        _idlePrev: 
         TimersList {
           _idleNext: [Circular],
           _idlePrev: [Circular],
           _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
           _unrefed: true,
           msecs: 120000,
           nextTick: false },
        _idleStart: 3654713,
        _destroyed: false,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: bound onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: [Circular],
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: bound parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: { address: '::ffff:10.108.213.44', family: 'IPv6', port: 54512 },
        [Symbol(asyncId)]: 3937,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 3939,
        [Symbol(triggerAsyncId)]: 26 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [ 'X-Powered-By', 'Express' ],
        'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ],
        'access-control-allow-methods': 
         [ 'Access-Control-Allow-Methods',
           'PUT, GET, POST, DELETE, OPTIONS' ],
        'access-control-allow-headers': [ 'Access-Control-Allow-Headers', 'Content-Type' ] } },
  route: 
   Route {
     path: '*',
     stack: 
      [ Layer {
          handle: [Function: logPerformanceMonitor],
          name: 'logPerformanceMonitor',
          params: undefined,
          path: undefined,
          keys: [],
          regexp: { /^\/?$/i fast_star: false, fast_slash: false },
          method: undefined } ],
     methods: { _all: true } } }